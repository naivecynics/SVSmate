{
    "name": "svsmate",
    "displayName": "SVSmate",
    "description": "The Ultimate VS Code Extension for SUSTechers!",
    "version": "0.0.1",
    "publisher": "svsmate-team",
    "repository": {
        "type": "git",
        "url": "https://github.com/naivecynics/SVSmate.git"
    },
    "homepage": "https://github.com/naivecynics/SVSmate",
    "bugs": {
        "url": "https://github.com/naivecynics/SVSmate/issues"
    },
    "engines": {
        "vscode": "^1.98.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension",
    "contributes": {
        "configuration": {
            "title": "%svsmate.configuration.title%",
            "properties": {
                "svsmate.root": {
                    "type": "string",
                    "default": "~/.svsmate",
                    "description": "%svsmate.configuration.root.description%"
                },
                "svsmate.apikey": {
                    "type": "string",
                    "default": "sk-c0e9243de07945c28e782f57929909b0",
                    "description": "%svsmate.configuration.apikey.description%"
                }
            }
        },
        "commands": [
            {
                "command": "svsmate.BB-updateAll",
                "title": "%svsmate.BB-updateAll.title%",
                "icon": "$(sync)"
            },
            {
                "command": "svsmate.BB-updateTerm",
                "title": "%svsmate.BB-updateTerm.title%",
                "icon": "$(refresh)"
            },
            {
                "command": "svsmate.BB-updateCourse",
                "title": "%svsmate.BB-updateCourse.title%",
                "icon": "$(refresh)"
            },
            {
                "command": "svsmate.BB-downloadToWorkspace",
                "title": "%svsmate.BB-downloadToWorkspace.title%",
                "icon": "$(cloud-download)"
            },
            {
                "command": "svsmate.BB-downloadToAiSpace",
                "title": "%svsmate.BB-downloadToAiSpace.title%",
                "icon": "$(symbol-file)"
            },
            {
                "command": "todoListView.addItem",
                "title": "%todoListView.addItem.title%",
                "icon": "$(add)"
            },
            {
                "command": "todoListView.editTask",
                "title": "%todoListView.editTask.title%",
                "icon": "$(edit)"
            },
            {
                "command": "todoListView.deleteTask",
                "title": "%todoListView.deleteTask.title%",
                "icon": "$(trash)"
            },
            {
                "command": "todoListView.toggleTaskCheckbox",
                "title": "%todoListView.toggleTaskCheckbox.title%",
                "icon": "$(check)"
            },
            {
                "command": "todoListView.sortByEndTime",
                "title": "%todoListView.sortByEndTime.title%",
                "icon": "$(sort-precedence)"
            },
            {
                "command": "todoListView.sortByKinds",
                "title": "%todoListView.sortByKinds.title%",
                "icon": "$(group-by-ref-type)"
            },
            {
                "command": "todoListView.searchTasks",
                "title": "%todoListView.searchTasks.title%",
                "icon": "$(search)"
            },
            {
                "command": "todoListView.clearSearch",
                "title": "%todoListView.clearSearch.title%",
                "icon": "$(clear-all)"
            },
            {
                "command": "todoListView.loadICSFile",
                "title": "%todoListView.loadICSFile.title%",
                "icon": "$(file-submodule)"
            },
            {
                "command": "todoListView.addSubTask",
                "title": "%todoListView.addSubTask.title%",
                "icon": "$(add)"
            },
            {
                "command": "todoList.generateAISubtasks",
                "title": "%todoList.generateAISubtasks.title%",
                "icon": "$(sparkle)"
            },
            {
                "command": "notesView.createNote",
                "title": "%notesView.createNote.title%",
                "icon": "$(note)"
            },
            {
                "command": "notesView.deleteNote",
                "title": "%notesView.deleteNote.title%",
                "icon": "$(trash)"
            },
            {
                "command": "svsmate.PDF-generateFromPDF",
                "title": "%svsmate.PDF-generateFromPDF.title%",
                "icon": "$(note)"
            }
        ],
        "chatParticipants": [
            {
                "id": "svsmate.ChatBot-API",
                "fullName": "svsmate-ChatBot-API",
                "name": "mate-API",
                "description": "%svsmate.chatParticipant.mate-API.description%",
                "isSticky": true
            },
            {
                "id": "svsmate.ChatBot",
                "fullName": "svsmate-ChatBot",
                "name": "mate",
                "description": "%svsmate.chatParticipant.mate.description%",
                "isSticky": true
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "SVSmate",
                    "title": "%svsmate.viewsContainer.SVSmate.title%",
                    "icon": "media/telescope.png"
                }
            ]
        },
        "views": {
            "SVSmate": [
                {
                    "id": "folderView",
                    "name": "%svsmate.view.folderView.name%"
                },
                {
                    "id": "bbMaterialView",
                    "name": "%svsmate.view.bbMaterialView.name%"
                },
                {
                    "id": "todoListView",
                    "name": "%svsmate.view.todoListView.name%"
                },
                {
                    "id": "notesView",
                    "name": "%svsmate.view.notesView.name%"
                }
            ]
        },
        "menus": {
            "view/item/context": [
                {
                    "command": "todoListView.editTask",
                    "when": "view == todoListView",
                    "group": "inline"
                },
                {
                    "command": "todoListView.deleteTask",
                    "when": "view == todoListView",
                    "group": "inline"
                },
                {
                    "command": "todoListView.addSubTask",
                    "when": "view == todoListView && viewItem == task",
                    "group": "inline"
                },
                {
                    "command": "todoList.generateAISubtasks",
                    "when": "view == todoListView && viewItem == task",
                    "group": "inline"
                },
                {
                    "command": "svsmate.BB-downloadToAiSpace",
                    "when": "view == bbMaterialView && viewItem == file",
                    "group": "inline"
                },
                {
                    "command": "svsmate.BB-downloadToWorkspace",
                    "when": "view == bbMaterialView && viewItem == file",
                    "group": "inline"
                },
                {
                    "command": "svsmate.BB-updateTerm",
                    "when": "view == bbMaterialView && viewItem == termFolder",
                    "group": "inline"
                },
                {
                    "command": "svsmate.BB-updateCourse",
                    "when": "view == bbMaterialView && viewItem == courseFolder",
                    "group": "inline"
                },
                {
                    "command": "notesView.deleteNote",
                    "when": "view == notesView",
                    "group": "inline"
                }
            ],
            "view/title": [
                {
                    "command": "todoListView.addItem",
                    "when": "view == todoListView",
                    "group": "navigation",
                    "title": "Add Item"
                },
                {
                    "command": "todoListView.sortByEndTime",
                    "when": "view == todoListView",
                    "group": "navigation",
                    "title": "Sort By End Time"
                },
                {
                    "command": "todoListView.sortByKinds",
                    "when": "view == todoListView",
                    "group": "navigation",
                    "title": "Sort By Kinds"
                },
                {
                    "command": "todoListView.searchTasks",
                    "when": "view == todoListView",
                    "group": "navigation",
                    "title": "Search Tasks"
                },
                {
                    "command": "todoListView.clearSearch",
                    "when": "view == todoListView ",
                    "group": "navigation",
                    "title": "Clear Search"
                },
                {
                    "command": "todoListView.loadICSFile",
                    "when": "view == todoListView",
                    "group": "navigation",
                    "title": "Load From .ics File"
                },
                {
                    "command": "svsmate.BB-updateAll",
                    "when": "view == bbMaterialView",
                    "group": "navigation",
                    "title": "Update All"
                },
                {
                    "command": "svsmate.BB-updateTerm",
                    "when": "view == bbMaterialView",
                    "group": "navigation",
                    "title": "Update Term"
                },
                {
                    "command": "svsmate.PDF-generateFromPDF",
                    "when": "view == folderView",
                    "group": "navigation",
                    "title": "Generate Code from PDF"
                }
            ]
        }
    },
    "dependencies": {
        "cheerio": "^1.0.0",
        "fetch-cookie": "^3.1.0",
        "node-fetch": "^2.7.0",
        "node-ical": "^0.20.1",
        "openai": "^4.87.3",
        "pdf-lib": "^1.17.1",
        "pdf-parse": "^1.1.1",
        "tough-cookie": "^5.1.2",
        "vscode-nls": "^5.2.0",
        "xml2js": "^0.6.2"
    },
    "devDependencies": {
        "@types/cheerio": "^0.22.35",
        "@types/mocha": "^10.0.10",
        "@types/node": "^20.17.46",
        "@types/node-fetch": "^2.6.12",
        "@types/pdf-parse": "^1.1.5",
        "@types/sinon": "^17.0.4",
        "@types/vscode": "^1.98.0",
        "@types/xml2js": "^0.4.14",
        "@typescript-eslint/eslint-plugin": "^8.25.0",
        "@typescript-eslint/parser": "^8.25.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.5.2",
        "cyclomatic-complexity": "^1.2.5",
        "esbuild": "^0.25.4",
        "eslint": "^9.21.0",
        "mocha": "^11.2.2",
        "npm-run-all": "^4.1.5",
        "sinon": "^20.0.0",
        "typedoc": "^0.28.4",
        "typescript": "^5.7.3",
        "vscode-nls-dev": "^4.0.4"
    },
    "scripts": {
        "lint": "eslint src --fix",
        "dev:compile": "npx rimraf out && npx tsc -p ./ && npm run lint",
        "test": "vscode-test",
        "docs": "typedoc",
        "compile": "npm run check-types && node esbuild.js",
        "check-types": "tsc --noEmit",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "vscode:prepublish": "npm run package",
        "package": "npm run check-types && node esbuild.js --production",
        "generate-nls": "npx vscode-nls-dev generate --out l10n src",
        "esbuild-base": "node esbuild.js",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "test-compile": "tsc -p ./",
        "pretest": "npm run compile && npm run lint"
    }
}